<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc"
	xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">



    <flow name="getCSVAccountsFlow" initialState="stopped">
        <file:inbound-endpoint path="src/main/resources/source" moveToDirectory="src/main/resources/target" responseTimeout="10000" doc:name="File" metadata:id="3f6a2ff7-c398-4ff7-93f9-bb0996167d9b">
            <file:filename-regex-filter pattern=".*csv" caseSensitive="false"/>
        </file:inbound-endpoint>
        <dw:transform-message doc:name="CSV to Java">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <foreach doc:name="For Each">
            <logger message="#['Processing Record #' + flowVars.counter + ': ' + payload]" level="INFO" doc:name="Logger"/>
        </foreach>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
    </flow>
    <batch:job name="accounts-CSV-Batch">
        <batch:input>
            <file:inbound-endpoint path="src/main/resources/source" moveToDirectory="src/main/resources/target" responseTimeout="10000" doc:name="File" metadata:id="3f6a2ff7-c398-4ff7-93f9-bb0996167d9b">
                <file:filename-regex-filter pattern=".*csv" caseSensitive="false"/>
            </file:inbound-endpoint>
            <dw:transform-message doc:name="CSV to Java">
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
            </dw:transform-message>
            <set-variable variableName="recSize" value="#[payload.size()]" doc:name="Variable"/>
        </batch:input>
        <batch:process-records>
            <batch:step name="CSV_Batch_Step1">
                <set-variable variableName="name_f" value="#[payload.Name]" doc:name="Variable"/>
                <set-session-variable variableName="name_s" value="#[payload.Name]" doc:name="Session Variable"/>
                <batch:set-record-variable variableName="name_r" value="#[payload.Name]" doc:name="Record Variable"/>
                <logger message="#['In BatchStep1--&gt;RecordVar: ' + recordVars.name_r]" level="INFO" doc:name="Logger"/>
            </batch:step>
            <batch:step name="CSV_Batch_Step2">
                <logger message="#['In BatchStep2--&gt;RecordVar: ' + recordVars.name_r]" level="INFO" doc:name="Logger"/>
            </batch:step>
        </batch:process-records>
        <batch:on-complete>
            <logger message="#['\n\n# of records processed successfully: ' + payload.processedRecords + '; # of records failed: ' + payload.failedRecords]" level="INFO" doc:name="Logger"/>
        </batch:on-complete>
    </batch:job>
    <batch:job name="accounts-DB-Batch">
        <batch:input>
            <poll doc:name="Poll">
                <fixed-frequency-scheduler frequency="30" timeUnit="SECONDS"/>
                <watermark variable="lastAccountID" default-expression="0" selector="MAX" selector-expression="#[payload.accountID]"/>
                <db:select config-ref="American_MySQL_Configuration" doc:name="Query Accounts">
                    <db:parameterized-query><![CDATA[SELECT * FROM accounts WHERE postal = 'L6M5A5' AND accountID > #[flowVars.lastAccountID]]]></db:parameterized-query>
                </db:select>
            </poll>
            <logger message="#['Total Records read: ' + payload.size()]" level="INFO" doc:name="Logger"/>
        </batch:input>
        <batch:process-records>
            <batch:step name="DB_Batch_Step1" accept-expression="#['\nRecord being processed: ' + payload]">
                <enricher source="#[payload.size() &gt; 0]" target="#[recordVars.exists]" doc:name="CheckIfRecordsExist">
                    <sfdc:query config-ref="Salesforce__Basic_Authentication" query="dsql:SELECT AccountNumber,Name FROM Account WHERE Name = '#[payload.name]'" doc:name="Salesforce"/>
                </enricher>
                <logger message="#['\nDoes the record exist? --&gt; ' + recordVars.exists]" level="INFO" doc:name="Logger"/>
            </batch:step>
            <batch:step name="DB_Batch_Step2" accept-expression="#[!recordVars.exists]">
                <logger message="#['Inserting new statement to Salesforce: ' + payload]" level="INFO" doc:name="Logger"/>
            </batch:step>
        </batch:process-records>
        <batch:on-complete>
            <logger message="#['\n\n# of records processed successfully: ' + payload.processedRecords + '; # of records failed: ' + payload.failedRecords]" level="INFO" doc:name="Logger"/>
        </batch:on-complete>
    </batch:job>
    <flow name="getSFDCAccountsFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/sfdc" allowedMethods="GET" doc:name="HTTP"/>
        <sfdc:query config-ref="Salesforce__Basic_Authentication" query="dsql:SELECT AccountNumber,BillingCity,BillingCountry,BillingPostalCode,BillingState,BillingStreet,Name FROM Account WHERE BillingPostalCode = '94087'" doc:name="Invoke Salesforce Service"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
    </flow>




</mule>
