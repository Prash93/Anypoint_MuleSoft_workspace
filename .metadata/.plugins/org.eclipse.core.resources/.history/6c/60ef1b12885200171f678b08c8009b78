<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:jms="http://www.mulesoft.org/schema/mule/jms" xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:ws="http://www.mulesoft.org/schema/mule/ws" xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">





    <flow name="getFlightsFormFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/flights" allowedMethods="GET" doc:name="HTTP"/>
        <parse-template location="FlightFinder.html" doc:name="Parse Flights Form Template"/>
    </flow>
    <flow name="getFlightsFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/flights" allowedMethods="POST" doc:name="HTTP"/>
        <dw:transform-message doc:name="set payload and destination">
            <dw:input-payload doc:sample="sample_data\json.json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
            <dw:set-variable variableName="destination"><![CDATA[%dw 1.0
%output application/java
---
payload.destination]]></dw:set-variable>
            <dw:set-variable variableName="json"><![CDATA[%dw 1.0
%output application/json
---
data: {
	city: 'Dallas',
	hub: 'DFW',
	population: 1234567,
	flight: {
		code: payload.destination,
		airline: payload.airline
	}
}]]></dw:set-variable>
            <dw:set-variable variableName="xml"><![CDATA[%dw 1.0
%output application/xml
---
data: {
	city: 'Dallas',
	hub: 'DFW',
	population: 1234567,
	flight @(airline: payload.airline): {
		code: payload.destination
	}
}]]></dw:set-variable>
        </dw:transform-message>
        <choice doc:name="Choice">
            <when expression="#[payload.airline == 'all']">
                <flow-ref name="getAllAirlinesFlow" doc:name="getAllAirlinesFlow"/>
            </when>
            <when expression="#[payload.airline == 'american']">
                <flow-ref name="getAmericanFlightsFlow" doc:name="getAmericanFlightsFlow"/>
            </when>
            <when expression="#[payload.airline == 'delta']">
                <flow-ref name="getDeltaFlightsFlow" doc:name="getDeltaFlightsFlow"/>
            </when>
            <when expression="#[payload.airline == 'united']">
                <flow-ref name="getUnitedFlightsFlow" doc:name="getUnitedFlightsFlow"/>
            </when>
            <otherwise>
                <logger message="#[payload]" level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>
        <expression-filter expression="#[payload !=[]]" doc:name="Suppress Empty ArrayList"/>
        <dw:transform-message doc:name="Java to JSON">
            <dw:input-payload/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload orderBy $.price filter ($.emptySeats != 0)]]></dw:set-payload>
        </dw:transform-message>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="getAllAirlinesFlow">
        <scatter-gather doc:name="Scatter-Gather">
            <processor-chain>
                <flow-ref name="getUnitedFlightsFlow" doc:name="getUnitedFlightsFlow"/>
                <filter ref="FilterArrayList" doc:name="Suppress Not An ArrayList"/>
            </processor-chain>
            <processor-chain>
                <flow-ref name="getAmericanFlightsFlow" doc:name="getAmericanFlightsFlow"/>
                <filter ref="FilterArrayList" doc:name="Suppress Not An ArrayList"/>
            </processor-chain>
            <processor-chain>
                <flow-ref name="getDeltaFlightsFlow" doc:name="getDeltaFlightsFlow"/>
                <filter ref="FilterArrayList" doc:name="Suppress Not An ArrayList"/>
            </processor-chain>
        </scatter-gather>
        <combine-collections-transformer doc:name="Combine Collections"/>
    </flow>
    <flow name="getAmericanFlightsFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/american" allowedMethods="GET" doc:name="HTTP"/>
        <set-variable variableName="destination" value="#[(flowVars.destination ==empty &amp;&amp; message.inboundProperties.'http.query.params'.code == empty) ? 'SFO' : (flowVars.destination != empty ? flowVars.destination : message.inboundProperties.'http.query.params'.code)]" doc:name="set destination"/>
        <db:select config-ref="American_MySQL_Configuration" doc:name="Invoke American DB Service">
            <db:parameterized-query><![CDATA[SELECT * FROM flights WHERE toAirport = #[flowVars.destination]]]></db:parameterized-query>
        </db:select>
        <dw:transform-message doc:name="Java LinkedList to ArrayList" metadata:id="c524f024-4d98-4b24-b7ea-537d8ab1d5d9">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map  {
	airlineName: $.airlineName,
	departureDate: $.takeOffDate as :date {format: "yyyy/MM/dd"} as :string {format: "MMM dd, yyyy"},
	destination: $.toAirport,
	emptySeats: $.seatsAvailable when $.seatsAvailable != 'none' otherwise 0 as :number,
	flightCode: $.code1 ++ '-' ++ $.code2,
	origination: $.fromAirport,
	planeType: $.planeType,
	price: $.price as :number
}]]></dw:set-payload>
        </dw:transform-message>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
    </flow>

    <flow name="getUnitedFlightsFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/united" allowedMethods="GET" doc:name="HTTP"/>
        <set-variable variableName="destination" value="#[(flowVars.destination ==empty &amp;&amp; message.inboundProperties.'http.query.params'.code == empty) ? 'SFO' : (flowVars.destination != empty ? flowVars.destination : message.inboundProperties.'http.query.params'.code)]" doc:name="set destination"/>
        <http:request config-ref="United_HTTP_Request_Configuration" path="/{destination}" method="GET" doc:name="Invoke United REST Service" metadata:id="4a249cce-b490-4806-862c-fff89c51b6e9">
            <http:request-builder>
                <http:uri-param paramName="destination" value="#[flowVars.destination]"/>

            </http:request-builder>
        </http:request>
        <dw:transform-message doc:name="JSON to Java" metadata:id="ef82ddde-bf81-4ff9-ae2a-4124920b90a7">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload.flights map {
	airlineName: $.airlineName,
	departureDate: $.departureDate as :date {format: "yyyy/MM/dd"} as :string {format: "MMM dd, yyyy"},
	destination: $.destination,
	emptySeats: $.emptySeats,
	flightCode: $.code,
	origination: $.origin,
	planeType: $.planeType replace "Boing" with "Boeing",
	price: $.price
}]]></dw:set-payload>
        </dw:transform-message>

        <logger message="#[payload]" level="INFO" doc:name="Logger"/>

    </flow>
    <flow name="getDeltaFlightsFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/delta" allowedMethods="GET" doc:name="HTTP"/>
        <set-variable variableName="destination" value="#[(flowVars.destination ==empty &amp;&amp; message.inboundProperties.'http.query.params'.code == empty) ? 'SFO' : (flowVars.destination != empty ? flowVars.destination : message.inboundProperties.'http.query.params'.code)]" doc:name="set destination"/>
        <dw:transform-message doc:name="pass destination">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 http://soap.training.mulesoft.com/
---
{
	ns0#findFlight: {
		destination: flowVars.destination as :string
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <ws:consumer config-ref="Delta_Web_Service_Consumer" operation="findFlight" doc:name="Invoke Delta SOAP Service"/>
        <dw:transform-message doc:name="XML to Java" metadata:id="1b5ff97c-b933-46d5-add9-6285473753c0">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
%namespace ns0 http://soap.training.mulesoft.com/
---
payload.ns0#findFlightResponse.*return map {
	airlineName: $.airlineName,
	departureDate: $.departureDate as :date {format: "yyyy/MM/dd"} as :string {format: "MMM dd, yyyy"},
	destination: $.destination,
	emptySeats: $.emptySeats,
	flightCode: $.code,
	origination: $.origin,
	planeType: $.planeType replace "Boing" with "Boeing",
	price: $.price
}]]></dw:set-payload>
        </dw:transform-message>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
    </flow>
    
    
    
    
</mule>
